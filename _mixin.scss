@import "compass";
@import "compass/layout.scss";
@import "compass/css3";
@import "compass/css3/border-radius";
@import "compass/css3/box-shadow";
@import "compass/css3/user-interface";
@import "compass/utilities/general/clearfix";
@import "compass/typography/text/nowrap";
@import "compass/css3/hyphenation";
@import "compass/css3/transition";
@import "compass/support";
@import "compass/css3/box-sizing";
@import "bootstrap/compass_twitter_bootstrap/variables";
@import "bootstrap/compass_twitter_bootstrap/mixins";



// Encuestame doesn't support IE6, IE7 and IE8

$legacy-support-for-ie6 : false;
$legacy-support-for-ie7 : false;
$legacy-support-for-ie8 : false;

//LAYOUT
$layout_width : 970px;
$df_font_size : 12px;
$df_background_color : #F4F4F4;
$footer_height : 40px;

// Default Variables
$white : #FFFFFF;
$default_background_color : $white;

// black scala
$black : #000000;
$black_light : #888888;
$black_hight : #111111 !default;
$black_medium : #222222 !default;
$black_semi_medium : #252525;

// gray scala
$gray_ultra_light : #FAFAFA;
$gray_middle : #999;
$gray_lite : #e5e5e5;
$gray_normal : #616161;
$gray_dark : #918F8F;

// others colors
$yellow_light : #F9F9C2;
$red_light:  #9d261d;
$green_light : #C9F5C8;
$red_light : #FEBEB2;

// oragen scala
$orange : #F0A029;
$orange_middle : #E7A441;
$orange_light : #FFB952;
$orange_gradient_over : #BC870D;

// Info Messages
$success_color : #55986D;
$success_border_color : darken(#55986D, 30%);

$error_color : #BA3B3B;
$error_border_color : darken(#BA3B3B, 30%);

$warn_color : #55986D;
$warn_border_color : darken(#55986D, 30%);

$button_font_size : 12px;
$none : none;
$web_tag_color : #606060;
$web_tag_high_color : #828282;
$header_info_main_color : #333333;
$default_box_shadow_enme : #E0E0E0;
$header_info_main_color_dark : darken($header_info_main_color, 5%);

$default_background_color : $white;


// mobile sizes
$break-small: 320px;
$break-large: 400px;

@mixin background-default-wrapper() {
	  background-color: $default_background_color;
}

@mixin non_borders() {
	 @include border-radius(0px);
}

@mixin left() {
	 float : left;
}

.text-back-image {
   background-color: #E9EAED;
}

// eg: @include enme-gradient-custom($white, $gray_lite);
@mixin enme-gradient-custom($color1, $color2) {
	 background-color: $color1;
	 @include background-image(linear-gradient(color-stops($color1  0%, $color2 100%)));
}

@mixin gray_text_shadow(){
	@include text-shadow($float_background_pry_color 1px 0 0);
}

@mixin ctb-gradient-vertical($startColor: #555, $endColor: #333) {
  background-color: mix($startColor, $endColor, 62.5%);
  background-image: -moz-linear-gradient(top, $startColor, $endColor); // FF 3.6+
  background-image: -webkit-gradient(linear, 0 0, 0 100%, from($startColor), to($endColor)); // Safari 4+, Chrome 2+
  background-image: -webkit-linear-gradient(top, $startColor, $endColor); // Safari 5.1+, Chrome 10+
  background-image: -o-linear-gradient(top, $startColor, $endColor); // Opera 11.10
  background-image: linear-gradient(to bottom, $startColor, $endColor); // Standard, IE10
  background-repeat: repeat-x;
  //filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{darken($startColor, 1%)}', endColorstr='#{darken($endColor, 1%)}', GradientType=0); // IE9 and down
}

// Media Queries in Sass 3.2
//
// These mixins make media queries a breeze with Sass.
// The media queries from mobile up until desktop all 
// trigger at different points along the way
//
// And important point to remember is that and width
// over the portrait width is considered to be part of the
// landscape width. This allows us to capture widths of devices
// that might not fit the dimensions exactly. This means the break
// points are seamless.
 
$mq-mobile-portrait		: 320px !default;
$mq-mobile-landscape	: 480px !default;
$mq-tablet-portrait		: 768px !default;
$mq-tablet-landscape	: 1024px !default;
$mq-desktop				: 1382px !default;

$iphone-portrait: 320px;
$iphone-landscape: 480px;
$ipad-portrait: 768px;
$ipad-landscape: 1024px;

@mixin portrait-only {
  @media (orientation: portrait) {
    @content;
  }
}

// Both portrait and landscape
@mixin mobile-only {
	@media (max-width : $mq-mobile-landscape) {
		@content;
	}
}

// Everything up to and including the portrait width of the phone
// Since it's the smallest query it doesn't need a min
@mixin mobile-portrait-only {
	@media (max-width : $mq-mobile-portrait) and (orientation: portrait) {
		@content;
	}
}

// Everything up to and including the mobile portrait
@mixin mobile-portrait-and-below {
	@media (max-width : $mq-mobile-portrait) and (orientation: portrait) {
		@content;
	}
}

// Everything above and including the mobile portrait
@mixin mobile-portrait-and-up {
	@media (min-width : $mq-mobile-portrait) and (orientation: portrait) {
		@content;
	}
}

// Everthing larger than a portrait mobile up until mobile landscape
@mixin mobile-landscape-only {
	@media only screen
    and (min-width : $mq-mobile-portrait + 1)
    and (max-width : $mq-mobile-landscape)
    and (orientation: landscape)
    {
		@content;
	}
}

// Everything up to and including the mobile landscape width
@mixin mobile-landscape-and-below {
	@media only screen and (max-width : $mq-mobile-landscape) and (orientation: landscape) {
		@content;
	}
}

// Everything above and including the mobile landscape width
@mixin mobile-landscape-and-up {
	@media only screen and (min-width : $mq-mobile-portrait + 1) and (orientation: landscape) {
		@content;
	}
}

// Both the portrait and landscape width of the tablet
// Larger than a landscape mobile but less than or equal to a landscape tablet
@mixin tablet-only {
	@media only screen and (min-width : $mq-mobile-landscape + 1) and (max-width : $mq-tablet-landscape) {
		@content;
	}
}

// Everything larger than mobile landscape up until the portrait width of the tablet
@mixin tablet-portrait-only {
	@media only screen and (min-width : $mq-mobile-landscape + 1) and (max-width : $mq-tablet-portrait) {
		@content;
	}
}

// Everything below and including the portrait width of the tablet
@mixin tablet-portrait-and-below {
	@media only screen and (max-width : $mq-tablet-portrait) {
		@content;
	}
}

// Everything above and including the portrait width of the tablet
@mixin tablet-portrait-and-up {
	@media only screen and (min-width : $mq-mobile-landscape + 1) {
		@content;
	}
}

// Larger than portrait but less than or equal to the landscape width
@mixin tablet-landscape-only {
	@media only screen and (min-width : $mq-tablet-portrait + 1) and (max-width : $mq-tablet-landscape) {
		@content;
	}
}

// Up to and including the tablet landscape
@mixin tablet-landscape-and-below {
	@media only screen and (max-width : $mq-tablet-landscape) {
		@content;
	}
}

// Everything larger than portrait tablet
@mixin tablet-landscape-and-up {
	@media only screen and (min-width : $mq-tablet-portrait + 1) {
		@content;
	}
}

// Everything larger than a landscape tablet
@mixin desktop-and-up {
	@media only screen and (min-width : $mq-tablet-landscape + 1) {
		@content;
	}
}

// Everything below and including the desktop
@mixin desktop-and-below {
	@media only screen and (max-width : $mq-desktop) {
		@content;
	}
}

// Everything larger than a landscape tablet but less than or equal to the desktop
@mixin desktop-only {
	@media only screen and (min-width : $mq-tablet-landscape + 1) and (max-width : $mq-desktop) {
		@content;
	}
}

// Retina screens have a 1.5 pixel ratio, not 2
@mixin retina {
	@media only screen and (-webkit-min-device-pixel-ratio : 1.5), only screen and (min-device-pixel-ratio : 1.5) {
		@content;
	}
}

@mixin iphone6-landscape {
  @media only screen and (min-device-width: 375px) and (max-device-width: 667px) and (orientation: landscape) and (-webkit-min-device-pixel-ratio: 2) {
    @content;
  }
}

@mixin iphone6-portrait {
  @media only screen
  and (min-device-width : 375px)
  and (max-device-width : 667px)
  and (orientation : portrait)
  and (-webkit-min-device-pixel-ratio : 2)
  {
    @content;
  }
}

@mixin iphone6Plus-landscape {
  @media only screen
  and (min-device-width: 414px)
  and (max-device-width: 736px)
  and (orientation: landscape)
  and (-webkit-min-device-pixel-ratio: 3) {
    @content;
  }
}

@mixin iphone6Plus-portrait {
  @media only screen
  and (min-device-width : 414px)
  and (max-device-width : 736px)
  and (orientation : portrait)
  and (-webkit-min-device-pixel-ratio : 3)
  {
    @content;
  }
}